---
import { Markdown } from "@astropub/md";
import Link from "../components/ui/Link.astro";
import Prose from "../components/ui/Prose.astro";
import ExperienceLogo from "../components/ExperienceLogo.astro";
import SkillLink from "../components/SkillLink.astro";
import PageLayout from "../layouts/PageLayout.astro";
import { experienceDateString } from "../lib/experience-date-string";
import { sortExperiences } from "../lib/sort-experiences";
import {
  parseExperience,
  type FrontmatterExperience,
} from "../lib/parse-experience";

const experiences = (await Astro.glob("./resume/experiences/*.md"))
  .map(({ frontmatter, ...other }) => ({
    ...other,
    frontmatter: parseExperience(frontmatter as FrontmatterExperience),
  }))
  .sort((a, b) => sortExperiences(a.frontmatter, b.frontmatter));
---

<PageLayout pageTitle="My Resume">
  <div class="max-w-[800px] mx-auto my-8">
    {
      experiences.map((experience, index) => (
        <div>
          {index !== 0 && (
            <hr class="w-2/5 h-0.5 mx-auto my-4 bg-gray-100 border-0 rounded md:my-10" />
          )}
          <section class="flex items-start justify-items-center gap-8">
            <ExperienceLogo
              experience={experience.frontmatter}
              class="justify-start w-[100px]"
            />
            <div class="grow">
              <h2 class="text-lg font-bold">
                {experience.rawContent().length ? (
                  <Link href={experience.url || ""}>
                    {experience.frontmatter.title}
                  </Link>
                ) : (
                  experience.frontmatter.title
                )}{" "}
                @{experience.frontmatter.organization}{" "}
              </h2>
              <div class="flex justify-between pb-2 mb-2 border-b border-border-primary border-dashed">
                <p class="text-xs italic">{`(${experience.frontmatter.location})`}</p>
                <p class="text-xs italic font-semibold">
                  {experienceDateString({
                    start: experience.frontmatter.startDate,
                    end: experience.frontmatter.endDate,
                  })}
                </p>
              </div>
              <Prose class="p:text-sm min-h-16">
                <Markdown of={experience.frontmatter.description} />
              </Prose>
              <div class="flex gap-1 flex-wrap mt-6">
                {experience.frontmatter.skills.map((skill) => (
                  <SkillLink
                    class="text-xxs rounded-lg bg-slate-200 py-1 px-2"
                    skill={skill}
                  />
                ))}
              </div>
            </div>
          </section>
        </div>
      ))
    }
  </div>
</PageLayout>
